@extends('layouts.user')

@section("title", "T√¨m Ki·∫øm ƒê√°nh Gi√°")

@section('content')
@include("user.includes.sidebar")
<div class="main-content">
    <div class="page-content">
        <div class="container-fluid">
            <div class="text-center mb-4">
                <h2 class="fw-bold">T√¨m Ki·∫øm ƒê√°nh Gi√°</h2>
                <p>Nh·∫≠p t·ª´ kh√≥a ƒë·ªÉ tra c·ª©u ƒë√°nh gi√° c·ªßa th∆∞∆°ng hi·ªáu b·∫°n quan t√¢m.</p>
            </div>

            <!-- Form t√¨m ki·∫øm -->
            <form id="evaluateForm" class="mb-3">
                <div class="mb-3">
                    <label for="brandInput">Th∆∞∆°ng hi·ªáu</label>
                    <input id="brandInput"
                        class="form-control me-1"
                        value="{{ $brand_name ?? '' }}"
                        type="search"
                        placeholder="üîç Nh·∫≠p t√™n th∆∞∆°ng hi·ªáu..."
                        aria-label="Th∆∞∆°ng hi·ªáu"
                        {{ $brand_name || $word_search ? 'readonly' : '' }}>
                </div>

                <div class="mb-3">
                    <label for="wordSearchInput">T·ª´ kho√°</label>
                    <input id="wordSearchInput"
                        class="form-control me-1"
                        value="{{ $word_search ?? '' }}"
                        type="search"
                        placeholder="üîç Nh·∫≠p t·ª´ kho√°..."
                        aria-label="T·ª´ kho√°"
                        {{ $brand_name || $word_search ? 'readonly' : '' }}>
                </div>

                <button class="btn btn-success" type="submit">Search</button>
            </form>

            <div id="result-brand"></div>

            <div id="chart_grid_id" class="none mt-5">
                <!-- Card  -->
                <div class="row">

                    <!-- card t√™n th∆∞∆°ng hi·ªáu ƒë√°nh gi√°  -->
                    <div class="col-xl-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex">
                                    <div class="flex-grow-1">
                                        <p class="text-truncate font-size-14 mb-2">T√™n th∆∞∆°ng hi·ªáu</p>
                                        <h4 class="mb-2" id="brand_name"></h4>
                                        <p class="text-muted mb-0"><span class="text-success fw-bold font-size-12 me-2"><i class="ri-arrow-right-up-line me-1 align-middle"></i>9.23%</span>from previous period</p>
                                    </div>
                                    <div class="avatar-sm">
                                        <span class="avatar-title bg-light text-primary rounded-3">
                                            <i class="ri-store-2-line font-size-24"></i>
                                        </span>
                                    </div>
                                </div>
                            </div><!-- end cardbody -->
                        </div><!-- end card -->
                    </div><!-- end col -->

                    <!-- card t·ª´ ng·ªØ ƒë√°nh gi√° ƒë√°nh gi√°  -->
                    <div class="col-xl-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex">
                                    <div class="flex-grow-1">
                                        <p class="text-truncate font-size-14 mb-2">T·ª´ ng·ªØ ƒë√°nh gi√°</p>
                                        <h4 class="mb-2" id="word_search">{{$word_search}}</h4>
                                        <p class="text-muted mb-0"><span class="text-success fw-bold font-size-12 me-2"><i class="ri-arrow-right-up-line me-1 align-middle"></i>9.23%</span>from previous period</p>
                                    </div>
                                    <div class="avatar-sm">
                                        <span class="avatar-title bg-light text-primary rounded-3">
                                            <i class="ri-text font-size-24"></i>
                                        </span>
                                    </div>
                                </div>
                            </div><!-- end cardbody -->
                        </div><!-- end card -->
                    </div><!-- end col -->

                    <!-- card t·ªïng s·ªë comment  -->
                    <div class="col-xl-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex">
                                    <div class="flex-grow-1">
                                        <p class="text-truncate font-size-14 mb-2">T·ªïng s·ªë b√¨nh lu·∫≠n ph√¢n t√≠ch</p>
                                        <h4 class="mb-2" id="tong_binh_luan">
                                        </h4>
                                        <p class="text-muted mb-0"><span class="text-success fw-bold font-size-12 me-2"><i class="ri-arrow-right-up-line me-1 align-middle"></i>9.23%</span>from previous period</p>
                                    </div>
                                    <div class="avatar-sm">
                                        <span class="avatar-title bg-light text-primary rounded-3">
                                            <i class="ri-chat-4-line font-size-24"></i>
                                        </span>
                                    </div>
                                </div>
                            </div><!-- end cardbody -->
                        </div><!-- end card -->
                    </div><!-- end col -->

                    <!-- card ph·∫ßn trƒÉm t·ªët d·ª±a tr√™n comment  -->
                    <div class="col-xl-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex">
                                    <div class="flex-grow-1">
                                        <p class="text-truncate font-size-14 mb-2">Ph·∫ßn trƒÉm t·ªët (b√¨nh lu·∫≠n)</p>
                                        <h4 class="mb-2" id="phan_tram_tot">
                                        </h4>
                                        <p class="text-muted mb-0"><span class="text-success fw-bold font-size-12 me-2"><i class="ri-arrow-right-up-line me-1 align-middle"></i>9.23%</span>from previous period</p>
                                    </div>
                                    <div class="avatar-sm">
                                        <span class="avatar-title bg-light text-primary rounded-3">
                                            <i class="ri-thumb-up-line font-size-24"></i>
                                        </span>
                                    </div>
                                </div>
                            </div><!-- end cardbody -->
                        </div><!-- end card -->
                    </div><!-- end col -->

                    <!-- card ph·∫ßn trƒÉm x·∫•u d·ª±a tr√™n comment  -->
                    <div class="col-xl-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex">
                                    <div class="flex-grow-1">
                                        <p class="text-truncate font-size-14 mb-2">Ph·∫ßn trƒÉm x·∫•u (b√¨nh lu·∫≠n)</p>
                                        <h4 class="mb-2" id="phan_tram_xau">
                                        </h4>
                                        <p class="text-muted mb-0"><span class="text-success fw-bold font-size-12 me-2"><i class="ri-arrow-right-up-line me-1 align-middle"></i>9.23%</span>from previous period</p>
                                    </div>
                                    <div class="avatar-sm">
                                        <span class="avatar-title bg-light text-primary rounded-3">
                                            <i class="ri-thumb-down-line font-size-24"></i>
                                        </span>
                                    </div>
                                </div>
                            </div><!-- end cardbody -->
                        </div><!-- end card -->
                    </div><!-- end col -->

                    <!-- card ƒë·ªô tin c·∫≠y d·ª±a tr√™n comment  -->
                    <div class="col-xl-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex">
                                    <div class="flex-grow-1">
                                        <p class="text-truncate font-size-14 mb-2">ƒê·ªô tin c·∫≠y (b√¨nh lu·∫≠n)</p>
                                        <h4 class="mb-2" id="do_tin_cay">
                                        </h4>
                                        <p class="text-muted mb-0"><span class="text-success fw-bold font-size-12 me-2"><i class="ri-arrow-right-up-line me-1 align-middle"></i>9.23%</span>from previous period</p>
                                    </div>
                                    <div class="avatar-sm">
                                        <span class="avatar-title bg-light text-primary rounded-3">
                                            <i class="ri-heart-line font-size-24"></i>
                                        </span>
                                    </div>
                                </div>
                            </div><!-- end cardbody -->
                        </div><!-- end card -->
                    </div><!-- end col -->

                    <!-- card t·ªïng s·ªë reaction c·ªßa c√°c b√†i vi·∫øt  -->
                    <div class="col-xl-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex">
                                    <div class="flex-grow-1">
                                        <p class="text-truncate font-size-14 mb-2">T·ªïng s·ªë reaction ph√¢n t√≠ch (emoji)</p>
                                        <h4 class="mb-2" id="tong_so_reaction">
                                        </h4>
                                        <p class="text-muted mb-0"><span class="text-success fw-bold font-size-12 me-2"><i class="ri-arrow-right-up-line me-1 align-middle"></i>9.23%</span>from previous period</p>
                                    </div>
                                    <div class="avatar-sm">
                                        <span class="avatar-title bg-light text-primary rounded-3">
                                            <i class="ri-tv-line font-size-24"></i>
                                        </span>
                                    </div>
                                </div>
                            </div><!-- end cardbody -->
                        </div><!-- end card -->
                    </div><!-- end col -->

                    <!-- card ph·∫ßn trƒÉm t√≠ch c·ª±c d·ª±a tr√™n emoji  -->
                    <div class="col-xl-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex">
                                    <div class="flex-grow-1">
                                        <p class="text-truncate font-size-14 mb-2">C·∫£m x√∫c t√≠ch c·ª±c (emoji)</p>
                                        <h4 class="mb-2" id="cam_xuc_tich_cuc_emoji">
                                        </h4>
                                        <p class="text-muted mb-0"><span class="text-success fw-bold font-size-12 me-2"><i class="ri-arrow-right-up-line me-1 align-middle"></i>9.23%</span>from previous period</p>
                                    </div>
                                    <div class="avatar-sm">
                                        <span class="avatar-title bg-light text-primary rounded-3">
                                            <i class="ri-heart-2-line font-size-24"></i>
                                        </span>
                                    </div>
                                </div>
                            </div><!-- end cardbody -->
                        </div><!-- end card -->
                    </div><!-- end col -->

                    <!-- card ph·∫ßn trƒÉm ti√™u c·ª±c d·ª±a tr√™n emoji  -->
                    <div class="col-xl-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex">
                                    <div class="flex-grow-1">
                                        <p class="text-truncate font-size-14 mb-2">C·∫£m x√∫c ti√™u c·ª±c (emoji)</p>
                                        <h4 class="mb-2" id="cam_xuc_tieu_cuc_emoji">
                                        </h4>
                                        <p class="text-muted mb-0"><span class="text-success fw-bold font-size-12 me-2"><i class="ri-arrow-right-up-line me-1 align-middle"></i>9.23%</span>from previous period</p>
                                    </div>
                                    <div class="avatar-sm">
                                        <span class="avatar-title bg-light text-primary rounded-3">
                                            <i class="ri-close-line font-size-24"></i>

                                        </span>
                                    </div>
                                </div>
                            </div><!-- end cardbody -->
                        </div><!-- end card -->
                    </div><!-- end col -->

                    <!-- card t·ª´ t·ªët l·∫∑p l·∫°i nhi·ªÅu nh·∫•t -->
                    <div class="col-xl-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex">
                                    <div class="flex-grow-1">
                                        <p class="text-truncate font-size-14 mb-2">T·ª´ t·ªët ƒë∆∞·ª£c l·∫∑p l·∫°i nhi·ªÅu nh·∫•t (top 1)</p>
                                        <h4 class="mb-2" id="tu_tot_nhieu_nhat">
                                        </h4>
                                        <p class="text-muted mb-0"><span class="text-success fw-bold font-size-12 me-2"><i class="ri-arrow-right-up-line me-1 align-middle"></i>9.23%</span>from previous period</p>
                                    </div>
                                    <div class="avatar-sm">
                                        <span class="avatar-title bg-light text-primary rounded-3">
                                            <i class="ri-font-color font-size-24"></i>
                                        </span>
                                    </div>
                                </div>
                            </div><!-- end cardbody -->
                        </div><!-- end card -->
                    </div><!-- end col -->

                    <!-- card t·ª´ x√°u xu·∫•t hi·ªán nhi·ªÅu nh·∫•t -->
                    <div class="col-xl-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex">
                                    <div class="flex-grow-1">
                                        <p class="text-truncate font-size-14 mb-2">T·ª´ x·∫•u xu·∫•t hi·ªán nhi·ªÅu nh·∫•t (top 1)</p>
                                        <h4 class="mb-2" id="tu_xau_nhieu_nhat">
                                        </h4>
                                        <p class="text-muted mb-0"><span class="text-success fw-bold font-size-12 me-2"><i class="ri-arrow-right-up-line me-1 align-middle"></i>9.23%</span>from previous period</p>
                                    </div>
                                    <div class="avatar-sm">
                                        <span class="avatar-title bg-light text-primary rounded-3">
                                            <i class="ri-bold font-size-24"></i>
                                        </span>
                                    </div>
                                </div>
                            </div><!-- end cardbody -->
                        </div><!-- end card -->
                    </div><!-- end col -->

                </div><!-- end row -->

                <!-- Bi·ªÉu ƒë·ªì (Chart) -->
                <div class="row">
                    <!-- Bi·ªÉu ƒë·ªì wordCloudChart th·ªÉ hi·ªán t·ª´ t·ªët ph·ªï bi·∫øn -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="chart-card">
                                    <canvas width="500" height="500" id="wordCloudChartGood"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì wordCloudChart th·ªÉ hi·ªán t·ª´ x·∫•u ph·ªï bi·∫øn -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">

                                <div class="chart-card">
                                    <canvas width="500" height="500" id="wordCloudChartBad"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì pie chart ph·∫ßn trƒÉm c·∫£m x√∫c  -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">

                                <div class="chart-card">
                                    <canvas width="500" height="500" id="pieChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì tr√≤n (Pie chart) ‚Äì Ph√¢n ph·ªëi emoji theo t·ª∑ l·ªá  -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="chart-card">
                                    <canvas width="500" height="500" id="ty_le_cam_xuc_emoji"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì pie chart t·ª∑ l·ªá b√†i vi·∫øt t·ª´ group v√† pages  -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="chart-card">
                                    <canvas width="500" height="500" id="ty_le_bai_viet_group_page"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì horizontal-bar-chart s·ªë l∆∞·ª£ng b√†i vi·∫øt t·ª´ group v√† pages  -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="chart-card">
                                    <canvas width="500" height="500" id="so_luong_bai_viet_group_page"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì horizontal-bar-chart trung b√¨nh t·ªët x·∫•u t·ª´ group v√† pages  -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="chart-card">
                                    <canvas width="500" height="500" id="trung_binh_tot_xau_group_page"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì horizontal-bar-chart s·ªë l∆∞·ª£ng comment group v√† pages  -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="chart-card">
                                    <canvas width="500" height="500" id="so_luong_comment_group_page"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì horizontal-bar-chart s·ªë l∆∞·ª£ng b√†i vi·∫øt theo word_search -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="chart-card">
                                    <canvas width="500" height="500" id="so_luong_bai_viet_word_search"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì Stacked bar chart th·ªÉ hi·ªán Ph√¢n b·ªï c·∫£m x√∫c theo t·ª´ng t·ª´ kho√° t√¨m ki·∫øm -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="chart-card">
                                    <canvas width="500" height="500" id="cam_xuc_theo_tu_khoa"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì barchart th·ªÉ hi·ªán s·ªë l∆∞·ª£ng c·∫£m x√∫c (t·ªët x·∫•u)  -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">

                                <div class="chart-card">
                                    <canvas width="500" height="500" id="wordChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì barchart th·ªÉ hi·ªán s·ªë l∆∞·ª£ng c·∫£m x√∫c icon theo word_search c·ªßa th∆∞∆°ng  hi·ªáu  -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">

                                <div class="chart-card">
                                    <canvas width="500" height="500" id="so_luong_cam_xuc_emoji"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì th·ªÉ hi·ªán top 10 t·ª´ x·∫•u ph·ªï bi·∫øn -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">

                                <div class="chart-card">
                                    <canvas width="500" height="500" id="top_10_xau"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì th·ªÉ hi·ªán top 10 t·ª´ x·∫•u ph·ªï bi·∫øn -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">

                                <div class="chart-card">
                                    <canvas width="500" height="500" id="top_10_tot"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì th·ªÉ hi·ªán top 5 t·ª´ x·∫•u ph·ªï bi·∫øn -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="chart-card">
                                    <canvas width="500" height="500" id="top_5_xau_pho_bien"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì th·ªÉ hi·ªán top 5 t·ª´ t·ªët ph·ªï bi·∫øn -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="chart-card">
                                    <canvas width="500" height="500" id="top_5_tot_pho_bien"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì lineChart th·ªÉ hi·ªán t·ª∑ l·ªá c·∫£m x√∫c theo th·ªùi gian -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="chart-card">
                                    <canvas width="500" height="500" id="lineChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì lineChart th·ªÉ hi·ªán c·∫£m x√∫c theo nƒÉm -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="chart-card">
                                    <canvas width="500" height="500" id="cam_xuc_theo_nam"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì lineChart th·ªÉ hi·ªán s·ªë l∆∞·ª£ng comment theo th·ªùi gian -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="chart-card">
                                    <canvas width="500" height="500" id="so_luong_comment_theo_thoi_gian"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì lineChart bi·∫øn ƒë·ªông emoji theo th·ªùi gian -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="chart-card">
                                    <canvas width="500" height="500" id="bien_dong_emoji"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bi·ªÉu ƒë·ªì box-plot th·ªÉ hi·ªán s·ªë l∆∞·ª£ng t·ªët x·∫•u trung b√¨nh tr√™n m·ªói comment -->
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="chart-card">
                                    <canvas width="500" height="500" id="so_luong_tot_xau_tren_comment"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
@endsection

<script>
    "use strict";

    // C√°c bi·∫øn th·ªÉ hi·ªán c·ªßa bi·ªÉu ƒë·ªì

    // c√°c bi·ªÉu ƒë·ªì tr√≤n
    let bieu_do_pie_post_group_page = null;
    let bieu_do_ty_le_cam_xuc_emoji = null
    let sentimentChart = null;

    // c√°c bi·ªÉu ƒë·ªì c·ªôt ngang v√† ƒë·ª©ng
    let bieu_do_horizontal_bar_chart_post_group_page = null
    let bieu_do_horizontal_bar_chart_comment_group_page = null
    let bieu_do_trung_binh_tot_xau_group_page = null
    let bieu_do_horizontal_bar_chart_post_word_search = null
    let bieu_do_cam_xuc_theo_tu_khoa = null
    let wordChartCoutChart = null;
    let bieu_do_top_10_tot = null
    let bieu_do_top_10_xau = null
    let bieu_do_tot_xau_tren_comment = null
    let bieu_do_top_5_tot_pho_bien = null
    let bieu_do_top_5_xau_pho_bien = null
    let bieu_do_so_luong_cam_xuc_emoji = null

    // bi·ªÉu ƒë·ªì wordCloud
    let wordCloudChartGood = null;
    let wordCloudChartBad = null;

    // bi·ªÉu ƒë·ªì linechart
    let lineChart = null;
    let bieu_do_line_chart_comment_time = null
    let bieu_do_cam_xuc_theo_nam = null
    let bieu_do_bien_dong_emoji = null


    // === C·∫§U H√åNH CHUNG ===
    const titleConfig = (text, size = 24) => ({
        display: true,
        text,
        color: '#333',
        font: {
            size
        }
    });

    const axisConfig = (label) => ({
        title: {
            display: true,
            text: label,
            color: '#333',
            font: {
                size: 16
            }
        },
        ticks: {
            color: '#333'
        }
    });

    const optionsWordChart = (label, size = 28) => ({
        color: '#333',
        responsive: true,
        plugins: {
            legend: {
                display: false
            },
            title: {
                display: true,
                text: label,
                color: '#333',
                font: {
                    size
                }
            },
            wordCloud: {
                minFontSize: 10, // ch·ªØ nh·ªè nh·∫•t
                maxFontSize: 40 // ch·ªØ l·ªõn nh·∫•t ‚Äì KH√îNG ƒë·ªÉ qu√° l·ªõn (vd: 80)
            },
        }
    })




    // === BI·ªÇU ƒê·ªí PIE: t·ª∑ l·ªá b√†i vi·∫øt t·ª´ group v√† page ===
    function show_bieu_do_pie_post_group_page(group, page) {
        if (bieu_do_pie_post_group_page) bieu_do_pie_post_group_page.destroy();

        const ctx = document.getElementById('ty_le_bai_viet_group_page').getContext('2d');

        const data = [group, page];
        const labels = ['Group', 'Fanpage'];
        const backgroundColors = ['#2196F3', '#FFC107'];

        bieu_do_pie_post_group_page = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    data: data,
                    backgroundColor: backgroundColors,
                    hoverOffset: 10
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    datalabels: {
                        color: '#000',
                        font: {
                            weight: 'bold',
                            size: 14
                        },
                        formatter: value => typeof value === "number" ? value.toFixed(2) + '%' : value
                    },
                    title: titleConfig(`Bi·ªÉu ƒë·ªì th·ªÉ hi·ªán t·ª∑ l·ªá b√†i vi·∫øt trong Group v√† Fanpages`, 28),
                    legend: {
                        labels: {
                            boxWidth: 20,
                            font: {
                                size: 16
                            }
                        }
                    }
                }
            },
            plugins: [ChartDataLabels]
        });
    }

    // === Bi·ªÉu ƒë·ªì tr√≤n (Pie chart) ‚Äì Ph√¢n ph·ªëi emoji  ===
    function show_bieu_do_ty_le_cam_xuc_emoji(data_emoji) {
        if (bieu_do_ty_le_cam_xuc_emoji) bieu_do_ty_le_cam_xuc_emoji.destroy();

        const ctx = document.getElementById('ty_le_cam_xuc_emoji').getContext('2d');

        // B·ªè "T·∫•t c·∫£" v√† chuy·ªÉn ƒë·ªïi key sang emoji n·∫øu c·∫ßn
        const emojiMap = {
            "Th√≠ch": "üëç",
            "Haha": "üòÇ",
            "Bu·ªìn": "üò¢",
            "Ph·∫´n n·ªô": "üò°",
            "Y√™u th√≠ch": "‚ù§Ô∏è",
            "Ng·∫°c nhi√™n": "üòÆ",
            "Th∆∞∆°ng th∆∞∆°ng": "ü•∞"
        };

        const filtered = Object.entries(data_emoji).filter(([key]) => key !== "T·∫•t c·∫£");

        const labels = filtered.map(([key]) => emojiMap[key] || key);
        const values = filtered.map(([_, value]) => value);

        const backgroundColors = [
            '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0',
            '#9966FF', '#FF9F40', '#66D4A3', '#F67019'
        ];

        bieu_do_ty_le_cam_xuc_emoji = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    data: values,
                    backgroundColor: backgroundColors.slice(0, labels.length),
                    hoverOffset: 10
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    datalabels: {
                        color: '#000',
                        font: {
                            weight: 'bold',
                            size: 14
                        },
                        formatter: (value, ctx) => {
                            const total = ctx.chart.data.datasets[0].data.reduce((a, b) => a + b, 0);
                            return `${((value / total) * 100).toFixed(1)}%`;
                        }
                    },
                    title: titleConfig('Bi·ªÉu ƒë·ªì t·ª∑ l·ªá c·∫£m x√∫c (emoji)', 28),
                    legend: {
                        labels: {
                            boxWidth: 20,
                            font: {
                                size: 16
                            }
                        }
                    }
                }
            },
            plugins: [ChartDataLabels]
        });
    }


    // === BI·ªÇU ƒê·ªí: s·ªë l∆∞·ª£ng b√†i vi·∫øt t·ª´ group v√† page ===
    function show_bieu_do_horizontal_bar_chart_post_group_page(group, page) {
        if (bieu_do_horizontal_bar_chart_post_group_page) bieu_do_horizontal_bar_chart_post_group_page.destroy();

        const ctx = document.getElementById('so_luong_bai_viet_group_page').getContext('2d');
        bieu_do_horizontal_bar_chart_post_group_page = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Group', 'Fanpages'],
                datasets: [{
                    axis: 'y',
                    label: 'S·ªë l∆∞·ª£ng b√†i vi·∫øt',
                    data: [group, page],
                    backgroundColor: [
                        'rgba(75, 192, 192, 0.2)', // Xanh ng·ªçc
                        'rgba(255, 206, 86, 0.2)' // V√†ng s√°ng
                    ],
                    borderColor: [
                        'rgba(75, 192, 192, 1)',
                        'rgba(255, 206, 86, 1)'
                    ],
                    hoverBackgroundColor: [
                        'rgba(75, 192, 192, 0.5)',
                        'rgba(255, 206, 86, 0.5)'
                    ],
                    borderWidth: 1

                }]
            },
            options: {
                indexAxis: 'y',
                responsive: true,
                plugins: {
                    datalabels: {
                        color: '#333',
                        font: {
                            weight: 'bold',
                            size: 14
                        },
                        formatter: (value) => value // kh√¥ng c√≥ d·∫•u %
                    },
                    title: titleConfig('Bi·ªÉu ƒë·ªì th·ªÉ hi·ªán s·ªë l∆∞·ª£ng b√†i vi·∫øt c·ªßa group v√† fanpage', 24),
                    legend: {
                        display: false
                    }
                },
                scales: {
                    x: axisConfig("S·ªë l∆∞·ª£ng"),
                }
            },
            plugins: [ChartDataLabels]
        });
    }

    // === BI·ªÇU ƒê·ªí bar h: s·ªë l∆∞·ª£ng comment t·ª´ group v√† page ===
    function show_bieu_do_horizontal_bar_chart_comment_group_page(group, page) {
        if (bieu_do_horizontal_bar_chart_comment_group_page) bieu_do_horizontal_bar_chart_comment_group_page.destroy();

        const ctx = document.getElementById('so_luong_comment_group_page').getContext('2d');
        bieu_do_horizontal_bar_chart_comment_group_page = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Group', 'Fanpages'],
                datasets: [{
                    label: 'S·ªë l∆∞·ª£ng comments',
                    data: [group, page],
                    backgroundColor: ['rgba(255, 159, 64, 0.2)', 'rgba(153, 102, 255, 0.2)'],
                    borderColor: ['rgba(255, 159, 64, 1)', 'rgba(153, 102, 255, 1)'],
                    borderWidth: 1,
                    hoverBackgroundColor: ['rgba(255, 159, 64, 0.5)', 'rgba(153, 102, 255, 0.5)']
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    datalabels: {
                        color: '#333',
                        font: {
                            weight: 'bold',
                            size: 14
                        },
                        formatter: (value) => value // kh√¥ng c√≥ d·∫•u %
                    },
                    title: titleConfig('Bi·ªÉu ƒë·ªì th·ªÉ hi·ªán s·ªë l∆∞·ª£ng comments c·ªßa group v√† fanpage', 24),
                    legend: {
                        display: false
                    }
                },
                scales: {
                    x: axisConfig("S·ªë l∆∞·ª£ng"),
                }
            },
            plugins: [ChartDataLabels]
        });
    }

    function show_trung_binh_tot_xau_group_page(groupData, pageData) {
        if (bieu_do_trung_binh_tot_xau_group_page) bieu_do_trung_binh_tot_xau_group_page.destroy();

        const ctx = document.getElementById('trung_binh_tot_xau_group_page').getContext('2d');
        bieu_do_trung_binh_tot_xau_group_page = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['T·ªët', 'X·∫•u'], // 2 nh√£n cho m·ªói nh√≥m
                datasets: [{
                        label: 'Group',
                        data: [groupData.avgTot, groupData.avgXau],
                        backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)'],
                        borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)'],
                        borderWidth: 1
                    },
                    {
                        label: 'Fanpage',
                        data: [pageData.avgTot, pageData.avgXau],
                        backgroundColor: ['rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)'],
                        borderColor: ['rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],
                        borderWidth: 1
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    datalabels: {
                        color: '#333',
                        font: {
                            weight: 'bold',
                            size: 14
                        },
                        formatter: (value) => value + '%'
                    },
                    title: titleConfig('Bi·ªÉu ƒë·ªì trung b√¨nh % ƒë√°nh gi√° T·ªët v√† X·∫•u theo ngu·ªìn Group v√† Fanpage', 20),
                    legend: {
                        display: true,
                        position: 'top'
                    }
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Lo·∫°i ƒë√°nh gi√°'
                        },
                        stacked: false
                    },
                    y: {
                        beginAtZero: true,
                        max: 100,
                        title: {
                            display: true,
                            text: '% ƒë√°nh gi√°'
                        }
                    }
                }
            },
            plugins: [ChartDataLabels]
        });
    }



    // === BI·ªÇU ƒê·ªí PIE: t·ª∑ l·ªá b√†i vi·∫øt t·ª´ group v√† page ===
    function show_bieu_do_horizontal_bar_chart_post_word_search(words, values) {
        if (bieu_do_horizontal_bar_chart_post_word_search) bieu_do_horizontal_bar_chart_post_word_search.destroy();

        const ctx = document.getElementById('so_luong_bai_viet_word_search').getContext('2d');

        // H√†m t·∫°o m√†u s·∫Øc random (ho·∫∑c c√≥ th·ªÉ d√πng b·∫£ng m√†u c·ªë ƒë·ªãnh n·∫øu mu·ªën)
        const generateColors = (length) => {
            const backgroundColors = [];
            const borderColors = [];
            const hoverColors = [];

            const baseColors = [
                [255, 99, 132],
                [54, 162, 235],
                [255, 206, 86],
                [75, 192, 192],
                [153, 102, 255],
                [255, 159, 64]
            ];

            for (let i = 0; i < length; i++) {
                const color = baseColors[i % baseColors.length];
                backgroundColors.push(`rgba(${color[0]}, ${color[1]}, ${color[2]}, 0.2)`);
                borderColors.push(`rgba(${color[0]}, ${color[1]}, ${color[2]}, 1)`);
                hoverColors.push(`rgba(${color[0]}, ${color[1]}, ${color[2]}, 0.5)`);
            }

            return {
                backgroundColors,
                borderColors,
                hoverColors
            };
        };

        const {
            backgroundColors,
            borderColors,
            hoverColors
        } = generateColors(words.length);

        bieu_do_horizontal_bar_chart_post_word_search = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: words,
                datasets: [{
                    label: 'S·ªë l∆∞·ª£ng b√†i vi·∫øt',
                    data: values,
                    backgroundColor: backgroundColors,
                    borderColor: borderColors,
                    hoverBackgroundColor: hoverColors,
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    datalabels: {
                        color: '#333',
                        font: {
                            weight: 'bold',
                            size: 14
                        },
                        formatter: (value) => value
                    },
                    title: titleConfig('Bi·ªÉu ƒë·ªì th·ªÉ hi·ªán s·ªë l∆∞·ª£ng b√†i vi·∫øt theo t·ª´ kh√≥a', 24),
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: axisConfig("S·ªë l∆∞·ª£ng")
                }
            },
            plugins: [ChartDataLabels]
        });
    }


    // === BI·ªÇU ƒê·ªí PIE: C·∫¢M X√öC ===
    function showSentimentChart(positive, negative) {
        if (sentimentChart) sentimentChart.destroy();

        const ctx = document.getElementById('pieChart').getContext('2d');
        const data = [positive, negative];
        const labels = ['T√≠ch c·ª±c', 'Ti√™u c·ª±c'];
        const backgroundColors = ['#ff81b7', '#9792e8'];

        sentimentChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    data: data,
                    backgroundColor: backgroundColors,
                    hoverOffset: 10
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    datalabels: {
                        color: '#000',
                        font: {
                            weight: 'bold',
                            size: 14
                        },
                        formatter: value => typeof value === "number" ? value.toFixed(2) + '%' : value
                    },
                    title: titleConfig('Bi·ªÉu ƒë·ªì th·ªÉ hi·ªán t·ª∑ l·ªá c·∫£m x√∫c', 28),
                    legend: {
                        labels: {
                            boxWidth: 20,
                            font: {
                                size: 16
                            }
                        }
                    }
                }
            },
            plugins: [ChartDataLabels]
        });
    }

    // === BI·ªÇU ƒê·ªí C·ªòT: T·ª™ T·ªêT/X·∫§U ===
    function showWordCountChart(tuTot, tuXau) {
        if (wordChartCoutChart) wordChartCoutChart.destroy();

        const ctx = document.getElementById('wordChart').getContext('2d');
        wordChartCoutChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['T·ª´ T·ªët', 'T·ª´ X·∫•u'],
                datasets: [{
                    label: 'S·ªë l∆∞·ª£ng t·ª´',
                    data: [tuTot.length, tuXau.length],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)', // ƒê·ªè h·ªìng
                        'rgba(54, 162, 235, 0.2)' // Xanh d∆∞∆°ng
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)'
                    ],
                    hoverBackgroundColor: [
                        'rgba(255, 99, 132, 0.5)',
                        'rgba(54, 162, 235, 0.5)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    datalabels: {
                        color: '#333',
                        font: {
                            weight: 'bold',
                            size: 14
                        },
                        formatter: (value) => value // kh√¥ng c√≥ d·∫•u %
                    },
                    title: titleConfig('Bi·ªÉu ƒë·ªì th·ªÉ hi·ªán s·ªë l∆∞·ª£ng t·ª´ t·ªët v√† t·ª´ x·∫•u', 24),
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: axisConfig("S·ªë l∆∞·ª£ng"),
                    x: axisConfig("Lo·∫°i t·ª´")
                }
            },
            plugins: [ChartDataLabels]
        });
    }

    // === BI·ªÇU ƒê·ªí C·ªòT: HI·ªÇN TH·ªä T·ªîNG S·ªê L∆Ø·ª¢NG EMOJI C·ª¶A WORD_SEARCH TRONG TH∆Ø∆†NG HI·ªÜU ===
    function show_bieu_do_so_luong_cam_xuc_emoji(data_emoji) {
        if (bieu_do_so_luong_cam_xuc_emoji) bieu_do_so_luong_cam_xuc_emoji.destroy();

        const ctx = document.getElementById('so_luong_cam_xuc_emoji').getContext('2d');

        const filteredEntries = Object.entries(data_emoji).filter(([key, _]) => key !== "T·∫•t c·∫£");
        const labels = filteredEntries.map(([key, _]) => key);
        const values = filteredEntries.map(([_, value]) => value);


        bieu_do_so_luong_cam_xuc_emoji = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'S·ªë l∆∞·ª£ng c·∫£m x√∫c',
                    data: values,
                    backgroundColor: 'rgba(153, 102, 255, 0.5)',
                    borderColor: 'rgba(153, 102, 255, 1)',
                    borderWidth: 1,
                    hoverBackgroundColor: 'rgba(153, 102, 255, 0.7)',
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    datalabels: {
                        color: '#333',
                        font: {
                            weight: 'bold',
                            size: 14
                        },
                        formatter: (value) => value
                    },
                    title: titleConfig('Bi·ªÉu ƒë·ªì s·ªë l∆∞·ª£ng c·∫£m x√∫c b√†i ƒëƒÉng', 24),
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: axisConfig("S·ªë l∆∞·ª£ng c·∫£m x√∫c"),
                    x: axisConfig("Lo·∫°i c·∫£m x√∫c")
                }
            },
            plugins: [ChartDataLabels]
        });
    }

    // === BI·ªÇU ƒê·ªí WordCloud: T·ª™ T·ªêT/X·∫§U ===
    function showWordCloudChartGood(words) {
        const topWords = words.slice(0, 50); // Gi·ªõi h·∫°n s·ªë t·ª´

        const weights = topWords.map(d => d.weight);
        const min = Math.min(...weights);
        const max = Math.max(...weights);

        const scaledWeights = weights.map(w => {
            const normalized = max !== min ? (w - min) / (max - min) : 0.5;
            return 18 + normalized * 18; // font size t·ª´ 12 ƒë·∫øn 30
        });

        wordCloudChartGood?.destroy();

        const ctx = document.getElementById("wordCloudChartGood");
        wordCloudChartGood = new Chart(ctx, {
            type: "wordCloud",
            data: {
                labels: topWords.map(w => w.word),
                datasets: [{
                    label: 'T·ª´ t√≠ch c·ª±c ph·ªï bi·∫øn',
                    data: scaledWeights,
                }]
            },
            options: {
                plugins: {
                    legend: {
                        display: false
                    }
                }
            }
        });
    }

    function showWordCloudChartBad(words) {
        const topWords = words.slice(0, 50); // Gi·ªõi h·∫°n s·ªë t·ª´

        const weights = topWords.map(d => d.weight);
        const min = Math.min(...weights);
        const max = Math.max(...weights);

        const scaledWeights = weights.map(w => {
            const normalized = max !== min ? (w - min) / (max - min) : 0.5;
            return 18 + normalized * 18; // font size t·ª´ 12 ƒë·∫øn 30
        });

        wordCloudChartBad?.destroy();

        const ctx = document.getElementById("wordCloudChartBad");
        wordCloudChartBad = new Chart(ctx, {
            type: "wordCloud",
            data: {
                labels: topWords.map(w => w.word),
                datasets: [{
                    label: 'T·ª´ ti√™u c·ª±c ph·ªï bi·∫øn',
                    data: scaledWeights,
                }]
            },
            options: {
                plugins: {
                    legend: {
                        display: false
                    }
                }
            }
        });
    }


    // === BI·ªÇU ƒê·ªí C·ªòT: T·ª™ T·ªêT/X·∫§U ===
    function show_top_10_xau(words, weights) {
        if (bieu_do_top_10_xau) bieu_do_top_10_xau.destroy();

        const ctx = document.getElementById('top_10_xau').getContext('2d');
        bieu_do_top_10_xau = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: words, // T√™n c√°c t·ª´ ti√™u c·ª±c
                datasets: [{
                    label: 'S·ªë l∆∞·ª£ng t·ª´',
                    data: weights, // S·ªë l·∫ßn xu·∫•t hi·ªán c·ªßa c√°c t·ª´
                    backgroundColor: 'rgba(75, 192, 192, 0.2)', // Xanh l√° c√¢y nh·∫°t
                    borderColor: 'rgba(75, 192, 192, 1)', // Xanh l√° c√¢y ƒë·∫≠m
                    hoverBackgroundColor: 'rgba(75, 192, 192, 0.5)', // Xanh l√° c√¢y khi hover
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    datalabels: {
                        color: '#333',
                        font: {
                            weight: 'bold',
                            size: 14
                        },
                        formatter: (value) => value // Hi·ªÉn th·ªã gi√° tr·ªã s·ªë m√† kh√¥ng c√≥ d·∫•u %
                    },
                    title: {
                        display: true,
                        text: 'Top 10 t·ª´ ti√™u c·ª±c xu·∫•t hi·ªán nhi·ªÅu',
                        font: {
                            size: 24
                        },
                        color: '#333'
                    },
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        title: {
                            display: true,
                            text: 'S·ªë l∆∞·ª£ng'
                        },
                        beginAtZero: true,
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'T·ª´ Ti√™u C·ª±c'
                        }
                    }
                }
            },
            plugins: [ChartDataLabels]
        });
    }

    // === BI·ªÇU ƒê·ªí C·ªòT: T·ª™ T·ªêT/X·∫§U ===
    function show_top_10_tot(words, weights) {
        if (bieu_do_top_10_tot) bieu_do_top_10_tot.destroy();

        const ctx = document.getElementById('top_10_tot').getContext('2d');
        bieu_do_top_10_tot = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: words, // T√™n c√°c t·ª´ ti√™u c·ª±c
                datasets: [{
                    label: 'S·ªë l∆∞·ª£ng t·ª´',
                    data: weights, // S·ªë l·∫ßn xu·∫•t hi·ªán c·ªßa c√°c t·ª´
                    backgroundColor: 'rgba(255, 159, 64, 0.2)',
                    borderColor: 'rgba(255, 159, 64, 1)',
                    hoverBackgroundColor: 'rgba(255, 159, 64, 0.5)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    datalabels: {
                        color: '#333',
                        font: {
                            weight: 'bold',
                            size: 14
                        },
                        formatter: (value) => value // Hi·ªÉn th·ªã gi√° tr·ªã s·ªë m√† kh√¥ng c√≥ d·∫•u %
                    },
                    title: {
                        display: true,
                        text: 'Top 10 t·ª´ t√≠ch c·ª±c ph·ªï bi·∫øn nh·∫•t',
                        font: {
                            size: 24
                        },
                        color: '#333'
                    },
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        title: {
                            display: true,
                            text: 'S·ªë l∆∞·ª£ng'
                        },
                        beginAtZero: true,
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'T·ª´ Ti√™u C·ª±c'
                        }
                    }
                }
            },
            plugins: [ChartDataLabels]
        });
    }

    // === BI·ªÇU ƒê·ªí: TOP 5 T·ª™ T√çCH C·ª∞C PH·ªî BI·∫æN NH·∫§T ===
    function show_top_5_tot_pho_bien(topPositiveComments) {
        // H·ªßy bi·ªÉu ƒë·ªì c≈© n·∫øu c√≥
        if (bieu_do_top_5_tot_pho_bien) bieu_do_top_5_tot_pho_bien.destroy();

        const totalPositive = topPositiveComments.reduce((sum, item) => sum + (item.positiveCount || 0), 0);

        // N·∫øu kh√¥ng c√≥ d·ªØ li·ªáu t√≠ch c·ª±c
        const hasData = totalPositive > 0;

        const labels = hasData ?
            topPositiveComments.map(item => item.comment.length > 50 ? item.comment.substring(0, 10) + '...' : item.comment) : ["Kh√¥ng c√≥ d·ªØ li·ªáu"];

        const data = hasData ?
            topPositiveComments.map(item => item.positiveCount) : [0];

        const backgroundColor = hasData ?
            'rgba(255, 99, 132, 0.2)' :
            'rgba(200, 200, 200, 0.3)';

        const borderColor = hasData ?
            'rgba(255, 99, 132, 1)' :
            'rgba(160, 160, 160, 0.5)';

        const ctx = document.getElementById('top_5_tot_pho_bien').getContext('2d');
        bieu_do_top_5_tot_pho_bien = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'T·ª´ t√≠ch c·ª±c',
                    data: data,
                    backgroundColor: backgroundColor,
                    borderColor: borderColor,
                    borderWidth: 1,
                    hoverBackgroundColor: hasData ? 'rgba(255, 99, 132, 0.6)' : backgroundColor,
                }]
            },
            options: {
                ...optionsWordChart("Top 5 b√¨nh lu·∫≠n t√≠ch c·ª±c ph·ªï bi·∫øn nh·∫•t", 28, hasData),
                onClick: function(event, elements) {
                    if (hasData && elements.length > 0) {
                        const index = elements[0].index;
                        const fullComment = topPositiveComments[index].comment;
                        alert(`B√¨nh lu·∫≠n ƒë·∫ßy ƒë·ªß: ${fullComment}`);
                    }
                },
            }
        });
    }


    // === BI·ªÇU ƒê·ªí: TOP 5 T·ª™ T√çCH C·ª∞C PH·ªî BI·∫æN NH·∫§T ===
    function show_top_5_xau_pho_bien(topNegativeComments) {
        // H·ªßy bi·ªÉu ƒë·ªì c≈© n·∫øu c√≥
        if (bieu_do_top_5_xau_pho_bien) bieu_do_top_5_xau_pho_bien.destroy();

        const totalNegativeCount = topNegativeComments.reduce((sum, item) => sum + (item.negativeCount || 0), 0);
        const hasData = totalNegativeCount > 0;

        const labels = hasData ?
            topNegativeComments.map(item =>
                item.comment.length > 50 ? item.comment.substring(0, 10) + '...' : item.comment
            ) : ["Kh√¥ng c√≥ d·ªØ li·ªáu"];

        const data = hasData ?
            topNegativeComments.map(item => item.negativeCount) : [0];

        const backgroundColor = hasData ?
            'rgba(66, 133, 244, 0.2)' :
            'rgba(200, 200, 200, 0.3)';

        const borderColor = hasData ?
            'rgba(66, 133, 244, 1)' :
            'rgba(160, 160, 160, 0.5)';

        const ctx = document.getElementById('top_5_xau_pho_bien').getContext('2d');
        bieu_do_top_5_xau_pho_bien = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'T·ª´ ti√™u c·ª±c',
                    data: data,
                    backgroundColor: backgroundColor,
                    borderColor: borderColor,
                    borderWidth: 1,
                    hoverBackgroundColor: hasData ? 'rgba(66, 133, 244, 0.6)' : backgroundColor,
                }]
            },
            options: {
                ...optionsWordChart("Top 5 b√¨nh lu·∫≠n ti√™u c·ª±c ph·ªï bi·∫øn nh·∫•t", 28, hasData),
                onClick: function(event, elements) {
                    if (hasData && elements.length > 0) {
                        const index = elements[0].index;
                        const fullComment = topNegativeComments[index].comment;
                        alert(`B√¨nh lu·∫≠n ƒë·∫ßy ƒë·ªß: ${fullComment}`);
                    }
                },
            }
        });
    }




    // === BI·ªÇU ƒê·ªí C·∫¢M X√öC THEO TH·ªúI GIAN ===
    function showEmotionOverTimeChart(data) {
        if (lineChart) lineChart.destroy();

        const ctx = document.getElementById('lineChart').getContext('2d');

        const labels = data.map(entry => entry.date);
        const positiveData = data.map(entry => entry.positive);
        const negativeData = data.map(entry => entry.negative);

        lineChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels,
                datasets: [{
                        label: 'T·ª´ T·ªët (%)',
                        data: positiveData,
                        borderColor: '#66BB6A', // Xanh l√° c√¢y nh·∫π
                        borderWidth: 2,
                        backgroundColor: '#66BB6A44', // Xanh l√° c√¢y nh·∫π (m·ªù)
                        fill: false,
                        tension: 0.3
                    },
                    {
                        label: 'T·ª´ X·∫•u (%)',
                        data: negativeData,
                        borderColor: '#FF7043', // Cam s√°ng
                        borderWidth: 2,
                        backgroundColor: '#FF704344', // Cam s√°ng (m·ªù)
                        fill: false,
                        tension: 0.3
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'Bi·∫øn ƒë·ªông c·∫£m x√∫c theo th·ªùi gian',
                        color: '#333',
                        font: {
                            size: 28
                        }
                    },
                    legend: {
                        labels: {
                            color: '#333'
                        }
                    }
                },
                scales: {
                    x: {
                        ticks: {
                            color: '#333'
                        },
                        title: {
                            display: true,
                            text: 'Ng√†y',
                            color: '#333'
                        }
                    },
                    y: {
                        beginAtZero: true,
                        ticks: {
                            color: '#333'
                        },
                        title: {
                            display: true,
                            text: 'Ph·∫ßn trƒÉm (%)',
                            color: '#333'
                        }
                    }
                }
            }
        });
    }

    // === BI·ªÇU ƒê·ªí C·∫¢M X√öC THEO TH·ªúI GIAN ===
    function show_bieu_do_cam_xuc_theo_nam(data) {
        if (bieu_do_cam_xuc_theo_nam) bieu_do_cam_xuc_theo_nam.destroy();

        const ctx = document.getElementById('cam_xuc_theo_nam').getContext('2d');

        const labels = data.map(entry => entry.year);
        const positiveData = data.map(entry => entry.positive);
        const negativeData = data.map(entry => entry.negative);

        bieu_do_cam_xuc_theo_nam = new Chart(ctx, {
            type: 'line',
            data: {
                labels,
                datasets: [{
                        label: 'T·ª´ T·ªët (%)',
                        data: positiveData,
                        borderColor: '#42A5F5', // Xanh d∆∞∆°ng nh·∫π
                        borderWidth: 2,
                        backgroundColor: '#42A5F544', // Xanh d∆∞∆°ng m·ªù
                        fill: false,
                        tension: 0.3
                    },
                    {
                        label: 'T·ª´ X·∫•u (%)',
                        data: negativeData,
                        borderColor: '#EF5350', // ƒê·ªè h·ªìng
                        borderWidth: 2,
                        backgroundColor: '#EF535044', // ƒê·ªè h·ªìng m·ªù
                        fill: false,
                        tension: 0.3
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'Bi·∫øn ƒë·ªông c·∫£m x√∫c theo nƒÉm',
                        color: '#333',
                        font: {
                            size: 28
                        }
                    },
                    legend: {
                        labels: {
                            color: '#333'
                        }
                    }
                },
                scales: {
                    x: {
                        ticks: {
                            color: '#333'
                        },
                        title: {
                            display: true,
                            text: 'Ng√†y',
                            color: '#333'
                        }
                    },
                    y: {
                        beginAtZero: true,
                        ticks: {
                            color: '#333'
                        },
                        title: {
                            display: true,
                            text: 'Ph·∫ßn trƒÉm (%)',
                            color: '#333'
                        }
                    }
                }
            }
        });
    }

    // === BI·ªÇU ƒê·ªí S·ªê L∆Ø·ª¢NG COMMENT THEO TH·ªúI GIAN THEO TH·ªúI GIAN ===
    function show_bieu_do_line_so_comment_by_time(data) {
        if (bieu_do_line_chart_comment_time) bieu_do_line_chart_comment_time.destroy();

        const ctx = document.getElementById('so_luong_comment_theo_thoi_gian').getContext('2d');

        const labels = data.dates;
        const counts = data.counts;

        bieu_do_line_chart_comment_time = new Chart(ctx, {
            type: 'line',
            data: {
                labels,
                datasets: [{
                    label: 'S·ªë l∆∞·ª£ng b√¨nh lu·∫≠n',
                    data: counts,
                    borderColor: '#4bc0c0',
                    backgroundColor: '#4bc0c044',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.3
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'S·ªë l∆∞·ª£ng b√¨nh lu·∫≠n theo th·ªùi gian',
                        color: '#333',
                        font: {
                            size: 24
                        }
                    },
                    legend: {
                        labels: {
                            color: '#333'
                        }
                    }
                },
                scales: {
                    x: {
                        ticks: {
                            color: '#333'
                        },
                        title: {
                            display: true,
                            text: 'Ng√†y',
                            color: '#333'
                        }
                    },
                    y: {
                        beginAtZero: true,
                        ticks: {
                            color: '#333'
                        },
                        title: {
                            display: true,
                            text: 'S·ªë l∆∞·ª£ng b√¨nh lu·∫≠n',
                            color: '#333'
                        }
                    }
                }
            }
        });
    }

    // == BI·ªÇU ƒê·ªí BI·∫æN ƒê·ªòNG EMOJI THEO TH·ªúI GIAN ==
    function show_bieu_do_bien_dong_emoji(groupedData) {
        if (bieu_do_bien_dong_emoji) bieu_do_bien_dong_emoji.destroy();

        const ctx = document.getElementById('bien_dong_emoji').getContext('2d');

        // L·∫•y t·∫•t c·∫£ c√°c nƒÉm
        const labels = Object.keys(groupedData).sort();

        // T·∫≠p h·ª£p c√°c lo·∫°i emoji duy nh·∫•t
        const allEmojis = new Set();
        labels.forEach(year => {
            Object.keys(groupedData[year]).forEach(emoji => allEmojis.add(emoji));
        });

        // Danh s√°ch m√†u ƒë·∫πp (c√≥ th·ªÉ th√™m ho·∫∑c ch·ªânh s·ª≠a t√πy th√≠ch)
        const niceColors = [
            '#ff6384', '#36a2eb', '#cc65fe', '#ffce56', '#4bc0c0',
            '#9966ff', '#ff9f40', '#8dd3c7', '#ffffb3', '#bebada'
        ];

        // T·∫°o datasets cho m·ªói lo·∫°i emoji
        const datasets = Array.from(allEmojis).map((emoji, index) => {
            const color = niceColors[index % niceColors.length];

            return {
                label: emoji,
                data: labels.map(year => groupedData[year][emoji] || 0),
                fill: false,
                borderColor: color,
                backgroundColor: color,
                tension: 0.2,
                pointRadius: 5,
                pointHoverRadius: 7
            };
        });

        bieu_do_bien_dong_emoji = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: datasets
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'Bi·ªÉu ƒë·ªì bi·∫øn ƒë·ªông emoji theo nƒÉm',
                        color: '#333',
                        font: {
                            size: 28
                        }
                    },
                    legend: {
                        labels: {
                            color: '#333'
                        }
                    }
                },
                scales: {
                    x: {
                        ticks: {
                            color: '#333'
                        },
                        title: {
                            display: true,
                            text: 'NƒÉm',
                            color: '#333'
                        }
                    },
                    y: {
                        beginAtZero: true,
                        ticks: {
                            color: '#333'
                        },
                        title: {
                            display: true,
                            text: 'S·ªë l∆∞·ª£ng',
                            color: '#333'
                        }
                    }
                }
            },
            plugins: [ChartDataLabels]
        });
    }



    function show_bieu_do_tot_xau_tren_comment(tot, xau) {
        if (bieu_do_tot_xau_tren_comment) bieu_do_tot_xau_tren_comment.destroy();

        const ctx = document.getElementById('so_luong_tot_xau_tren_comment').getContext('2d');

        bieu_do_tot_xau_tren_comment = new Chart(ctx, {
            type: 'boxplot',
            data: {
                labels: ['T·ª´ T·ªët', 'T·ª´ X·∫•u'],
                datasets: [{
                    label: 'S·ªë l∆∞·ª£ng t·ª´ tr√™n m·ªói comment',
                    backgroundColor: ['#a3e4d7', '#f5b7b1'],
                    borderColor: ['#16a085', '#c0392b'],
                    borderWidth: 1,
                    outlierColor: '#999',
                    padding: 10,
                    itemRadius: 0,
                    data: [
                        tot,
                        xau
                    ]
                }]
            },
            options: optionsWordChart("Bi·ªÉu ƒë·ªì th·ªÉ hi·ªán trung b√¨nh t·ª´ t·ªët x√°u tr√™n m·ªói comment")

        });
    }

    function show_bieu_do_phan_bo_cam_xuc_theo_tu_khoa(data) {
        if (bieu_do_cam_xuc_theo_tu_khoa) bieu_do_cam_xuc_theo_tu_khoa.destroy();
        const keywords = data.map(item => item.keyword);
        const positives = data.map(item => item.positive);
        const negatives = data.map(item => item.negative);

        const ctx = document.getElementById('cam_xuc_theo_tu_khoa').getContext('2d');

        bieu_do_cam_xuc_theo_tu_khoa = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: keywords,
                datasets: [{
                        label: 'T·ª´ T·ªët',
                        data: positives,
                        backgroundColor: 'rgba(46, 204, 113, 0.7)', // xanh l√°
                        borderColor: 'rgba(39, 174, 96, 1)',
                        borderWidth: 1
                    },
                    {
                        label: 'T·ª´ X·∫•u',
                        data: negatives,
                        backgroundColor: 'rgba(231, 76, 60, 0.7)', // ƒë·ªè
                        borderColor: 'rgba(192, 57, 43, 1)',
                        borderWidth: 1
                    }
                ]
            },
            options: optionsWordChart("Bi·ªÉu ƒë·ªì ph√¢n b·ªë c·∫£m x√∫c theo t·ª´ kho√°")
        });
    }





    function groupEmotionByDate(data) {
        const grouped = {};

        for (const {
                date_comment,
                comment_data_llm
            }
            of data) {
            const date = date_comment.slice(0, 10);
            const gpt = comment_data_llm?.GPT || {};
            const pos = parseFloat(gpt.phan_tram_tot) || 0;
            const neg = parseFloat(gpt.phan_tram_xau) || 0;

            if (!grouped[date]) grouped[date] = {
                total: 0,
                sumPos: 0,
                sumNeg: 0
            };
            grouped[date].total++;
            grouped[date].sumPos += pos;
            grouped[date].sumNeg += neg;
        }

        return Object.entries(grouped)
            .map(([date, {
                total,
                sumPos,
                sumNeg
            }]) => ({
                date,
                positive: (sumPos / total).toFixed(2),
                negative: (sumNeg / total).toFixed(2)
            }))
            .sort((a, b) => new Date(a.date) - new Date(b.date));
    }

    function groupEmojiByYear(data) {
        const grouped = {};

        for (const post of data) {
            const year = post.date_comment.slice(0, 4); // ch·ªâ l·∫•y nƒÉm
            const postData = post.post_data || [];

            for (const emotion of postData) {
                const cam_xuc = emotion.cam_xuc;
                const so_luong = parseInt(emotion.so_luong) || 0;

                if (cam_xuc === "T·∫•t c·∫£") continue;

                if (!grouped[year]) grouped[year] = {};
                if (!grouped[year][cam_xuc]) grouped[year][cam_xuc] = 0;

                grouped[year][cam_xuc] += so_luong;
            }
        }

        return grouped; // { '2023': { 'Th√≠ch': 2, 'Haha': 1 }, '2024': { ... } }
    }



    function groupEmotionByYear(data) {
        const grouped = {};

        for (const {
                date_comment,
                comment_data_llm
            }
            of data) {
            const year = new Date(date_comment).getFullYear(); // L·∫•y nƒÉm
            const gpt = comment_data_llm?.GPT || {};
            const pos = parseFloat(gpt.phan_tram_tot) || 0;
            const neg = parseFloat(gpt.phan_tram_xau) || 0;

            if (!grouped[year]) grouped[year] = {
                total: 0,
                sumPos: 0,
                sumNeg: 0
            };

            grouped[year].total++;
            grouped[year].sumPos += pos;
            grouped[year].sumNeg += neg;
        }

        return Object.entries(grouped)
            .map(([year, {
                total,
                sumPos,
                sumNeg
            }]) => ({
                year,
                positive: (sumPos / total).toFixed(2),
                negative: (sumNeg / total).toFixed(2)
            }))
            .sort((a, b) => a.year - b.year);
    }



    function countCommentsByDate(data) {
        const dateCount = {};

        for (const {
                date_comment
            }
            of data) {
            const date = date_comment.slice(0, 10);
            dateCount[date] = (dateCount[date] || 0) + 1;
        }

        return {
            dates: Object.keys(dateCount),
            counts: Object.values(dateCount)
        };
    }

    function tinh_cam_xuc_theo_tu_khoa(data_tong) {
        const groupedData = {};

        for (const {
                word_search = 'Kh√¥ng x√°c ƒë·ªãnh', comment_data_llm
            }
            of data_tong) {
            const tu_tot = comment_data_llm?.danh_sach_tu_tot?.length || 0;
            const tu_xau = comment_data_llm?.danh_sach_tu_xau?.length || 0;

            if (!groupedData[word_search]) groupedData[word_search] = {
                positive: 0,
                negative: 0
            };
            groupedData[word_search].positive += tu_tot;
            groupedData[word_search].negative += tu_xau;
        }

        return Object.entries(groupedData).map(([keyword, {
            positive,
            negative
        }]) => ({
            keyword,
            positive,
            negative
        }));
    }

    function get_top_comments(data_tong) {
        const commentsWithScores = data_tong.map(({
            comment,
            comment_data_llm
        }) => ({
            comment,
            positiveCount: comment_data_llm?.danh_sach_tu_tot?.length || 0,
            negativeCount: comment_data_llm?.danh_sach_tu_xau?.length || 0
        }));

        const sortedByPositive = [...commentsWithScores].sort((a, b) => b.positiveCount - a.positiveCount);
        const sortedByNegative = [...commentsWithScores].sort((a, b) => b.negativeCount - a.negativeCount);

        return {
            topPositiveComments: sortedByPositive.slice(0, 5),
            topNegativeComments: sortedByNegative.slice(0, 5)
        };
    }


    // === G·ªåI API & X·ª¨ L√ù ===
    async function evaluateBrand() {
        const brandInput = document.getElementById('brandInput');
        const phan_tram_tot = document.getElementById('phan_tram_tot');
        const phan_tram_xau = document.getElementById('phan_tram_xau');
        const brand_card = document.getElementById('brand_name');
        const word_search_card = document.getElementById('word_search');
        const do_tin_cay = document.getElementById('do_tin_cay');
        const tong_binh_luan = document.getElementById('tong_binh_luan');
        const tu_tot_nhieu_nhat = document.getElementById('tu_tot_nhieu_nhat');
        const tu_xau_nhieu_nhat = document.getElementById('tu_xau_nhieu_nhat');
        const tong_so_reaction = document.getElementById('tong_so_reaction');
        const cam_xuc_tich_cuc_emoji = document.getElementById('cam_xuc_tich_cuc_emoji');
        const cam_xuc_tieu_cuc_emoji = document.getElementById('cam_xuc_tieu_cuc_emoji');
        const brandName = brandInput.value.toLowerCase().trim();
        const wordSearchInput = document.getElementById('wordSearchInput');
        const wordSearch = wordSearchInput.value.toLowerCase().trim();

        const resultDiv = document.getElementById('result-brand');
        const chartGrid = document.getElementById('chart_grid_id');

        if (!brandName) return alert("Vui l√≤ng nh·∫≠p t√™n th∆∞∆°ng hi·ªáu.");

        resultDiv.innerHTML = `<h2 style="text-align: center;">ƒêang x·ª≠ l√Ω...</h2>`;

        const formData = new FormData();
        formData.append("brand_name", brandName);
        formData.append("word_search", wordSearch);
        formData.append("user_id", '{{Auth::id()}}');

        try {
            const response = await fetch('{{ config("services.api_url") }}/danh_gia_thuong_hieu/thuong_hieu/word', {
                method: "POST",
                headers: {
                    "API-Key": '{{ config("services.crawl_api.key") }}'
                },
                body: formData
            });

            const result = await response.json();

            if (response.ok && result.data) {
                const data_tong = result.data
                console.log(data_tong)

                const data = result.data[0];
                const tyletot = parseFloat(data.brand_data_llm.GPT.phan_tram_tot).toFixed(2)
                const tylexau = parseFloat(data.brand_data_llm.GPT.phan_tram_xau).toFixed(2)
                phan_tram_tot.innerText = tyletot + "%"
                phan_tram_xau.innerText = tylexau + "%"
                const tinhDoTinCay = parseFloat(((tyletot - tylexau) / 100 + 1) / 2);
                do_tin_cay.innerText = tinhDoTinCay.toFixed(2)

                // brand name v√† wordsearch
                brand_card.innerText = brandName
                word_search_card.innerText = wordSearch

                resultDiv.innerHTML = `<h2 style = "text-align: center;">Ph√¢n t√≠ch th∆∞∆°ng hi·ªáu ${brandName}</h2>`;
                chartGrid.style.display = "block";

                // bi·ªÉu ƒë·ªì pie th·ªÉ hi·ªán t·ª∑ l·ªá b√†i post t·ª´ group v√† page
                const uniquePostsMap = new Map();
                data_tong.forEach(post => {
                    if (!uniquePostsMap.has(post.post_content)) {
                        uniquePostsMap.set(post.post_content, post);
                    }
                });
                const uniquePosts = Array.from(uniquePostsMap.values());

                // S·ªë l∆∞·ª£ng v√† t·ª∑ l·ªá post tr√™n group v√† fanpage
                const groupCount = uniquePosts.filter(post => post.is_group).length;
                const fanpageCount = uniquePosts.filter(post => post.is_fanpage).length;
                const ty_le_group = (groupCount / (groupCount + fanpageCount)) * 100
                const ty_le_page = (fanpageCount / (groupCount + fanpageCount)) * 100


                // t·ªïng s·ªë c·∫£m x√∫c c·ªßa t·∫•t c·∫£ b√†i post c·ªßa th∆∞∆°ng hi·ªáu v·ªõi word search
                const tongCamXuc = {};

                uniquePosts.forEach(item => {
                    const postData = item.post_data || [];
                    postData.forEach(({
                        cam_xuc,
                        so_luong
                    }) => {
                        tongCamXuc[cam_xuc] = (tongCamXuc[cam_xuc] || 0) + so_luong;
                    });
                });


                const groupEmoji = groupEmojiByYear(uniquePosts)
                let total_reaction = 0;

                for (const key in tongCamXuc) {
                    if (key !== "T·∫•t c·∫£") {
                        total_reaction += tongCamXuc[key];
                    }
                }

                if (total_reaction === 0) {
                    cam_xuc_tich_cuc_emoji.innerText = "Kh√¥ng c√≥ d·ªØ li·ªáu";
                    cam_xuc_tieu_cuc_emoji.innerText = "Kh√¥ng c√≥ d·ªØ li·ªáu";
                    tong_so_reaction.innerText = "0";

                } else {
                    tong_so_reaction.innerText = total_reaction;
                    cam_xuc_tich_cuc_emoji.innerText =
                        ((((tongCamXuc["Th√≠ch"] || 0) +
                            (tongCamXuc["Y√™u th√≠ch"] || 0) +
                            (tongCamXuc["Haha"] || 0)) / total_reaction) * 100).toFixed(2) + "%";

                    cam_xuc_tieu_cuc_emoji.innerText =
                        ((((tongCamXuc["Ph·∫´n n·ªô"] || 0) +
                            (tongCamXuc["Bu·ªìn"] || 0)) / total_reaction) * 100).toFixed(2) + "%";
                }

                show_bieu_do_bien_dong_emoji(groupEmoji)

                show_bieu_do_so_luong_cam_xuc_emoji(tongCamXuc) // bi·ªÉu ƒë·ªì c·ªôt th·ªÉ hi·ªán s·ªë l∆∞·ª£ng
                show_bieu_do_ty_le_cam_xuc_emoji(tongCamXuc) // bi·ªÉu ƒë·ªì tr√≤n th·ªÉ hi·ªán t·ª∑ l·ªá

                // bi·ªÉu ƒë√≤ t·ª∑ l·ªá b√†i post trong group v√† page ƒë√£ l·∫•y ƒë∆∞·ª£c
                show_bieu_do_pie_post_group_page(
                    parseFloat(ty_le_group),
                    parseFloat(ty_le_page),
                )

                // bar chart horizontal post group page
                show_bieu_do_horizontal_bar_chart_post_group_page(groupCount, fanpageCount)

                // bi·ªÉu ƒë·ªì th·ªÉ hi·ªán s·ªë l∆∞·ª£ng comment group ho·∫∑c fanpages
                // Kh√¥ng lo·∫°i b·ªè comment tr√πng
                const comment_group = data_tong.filter(comment => comment.is_group).length;
                const comment_page = data_tong.filter(comment => comment.is_fanpage).length;
                tong_binh_luan.innerText = (comment_page + comment_group)

                show_bieu_do_horizontal_bar_chart_comment_group_page(comment_group, comment_page)

                // bi·ªÉu ƒë·ªì th·ªÉ hi·ªán s·ªë l∆∞·ª£ng b√†i vi·∫øt d·ª±a tr√™n word_search
                const wordSearchCount = {};

                uniquePosts.forEach(post => {
                    const word = post.word_search;
                    if (word) {
                        if (!wordSearchCount[word]) {
                            wordSearchCount[word] = 1;
                        } else {
                            wordSearchCount[word]++;
                        }
                    }
                });


                // T·∫°o dict g·ªìm 2 list: words v√† values
                const dict_word_count = {
                    words: Object.keys(wordSearchCount),
                    values: Object.values(wordSearchCount)
                };
                show_bieu_do_horizontal_bar_chart_post_word_search(dict_word_count.words, dict_word_count.values)

                // Bi·ªÉu ƒë·ªì tr√≤n hi·ªÉn th·ªã ph·∫ßn trƒÉm c·∫£m x√∫c
                showSentimentChart(
                    parseFloat(data.brand_data_llm.GPT.phan_tram_tot),
                    parseFloat(data.brand_data_llm.GPT.phan_tram_xau),
                    data.brand_name
                );

                // L·ªçc b√†i vi·∫øt t·ª´ group v√† page
                const group_data = data_tong.filter(post => post.is_group === 1);
                const page_data = data_tong.filter(post => post.is_fanpage === 1);

                // H√†m t√≠nh trung b√¨nh % t·ªët v√† % x·∫•u
                const calcAvgSentiment = (posts) => {
                    const valid = posts.filter(p => p.comment_data_llm?.GPT?.phan_tram_tot && p.comment_data_llm?.GPT?.phan_tram_xau);

                    const total = valid.length
                    const sumTot = valid.reduce((sum, p) => sum + parseFloat(p.comment_data_llm.GPT.phan_tram_tot), 0);
                    const sumXau = valid.reduce((sum, p) => sum + parseFloat(p.comment_data_llm.GPT.phan_tram_xau), 0);

                    return {
                        avgTot: (sumTot / total).toFixed(2),
                        avgXau: (sumXau / total).toFixed(2)
                    };
                };

                // T√≠nh k·∫øt qu·∫£
                const groupSentiment = calcAvgSentiment(group_data);
                const pageSentiment = calcAvgSentiment(page_data);

                show_trung_binh_tot_xau_group_page(groupSentiment, pageSentiment)

                // danh s√°ch t·ªïng
                const danh_sach_tu_tot = data.brand_data_llm.danh_sach_tu_tot;
                const danh_sach_tu_xau = data.brand_data_llm.danh_sach_tu_xau;

                const countWordGood = {};
                const countWordBad = {};

                danh_sach_tu_tot.forEach(word => {
                    countWordGood[word] = (countWordGood[word] || 0) + 1;
                });

                danh_sach_tu_xau.forEach(word => {
                    countWordBad[word] = (countWordBad[word] || 0) + 1;
                });

                const dem_tu_tot = Object.entries(countWordGood).map(([word, weight]) => ({
                    word,
                    weight
                }));

                const dem_tu_xau = Object.entries(countWordBad).map(([word, weight]) => ({
                    word,
                    weight
                }));

                // s·∫Øp x·∫øp l·∫°i s·ªë t·ª´ xu·∫•t hi·ªán nhi·ªÅu nh·∫•t t·ª´ cao xu·ªëng th·∫•p
                const sorted_tu_tot = dem_tu_tot.sort((a, b) => b.weight - a.weight);
                const sorted_tu_xau = dem_tu_xau.sort((a, b) => b.weight - a.weight);

                if (sorted_tu_tot.length > 0) {
                    tu_tot_nhieu_nhat.innerText = sorted_tu_tot[0].word + ": " + sorted_tu_tot[0].weight;
                } else {
                    tu_tot_nhieu_nhat.innerText = "Kh√¥ng c√≥ d·ªØ li·ªáu";
                }

                if (sorted_tu_xau.length > 0) {
                    tu_xau_nhieu_nhat.innerText = sorted_tu_xau[0].word + ": " + sorted_tu_xau[0].weight;
                } else {
                    tu_xau_nhieu_nhat.innerText = "Kh√¥ng c√≥ d·ªØ li·ªáu";
                }



                // bi·ªÉu ƒë·ªì c·ªôt so s√°nh s·ªë l∆∞·ª£ng t·ª´ t·ªët v√† t·ª´ x·∫•u
                showWordCountChart(
                    danh_sach_tu_tot,
                    danh_sach_tu_xau
                );

                // Bi·ªÉu ƒë·ªì wordChart 
                if (dem_tu_tot.length > 0) {
                    showWordCloudChartGood(dem_tu_tot);
                }

                if (dem_tu_xau.length > 0) {
                    showWordCloudChartBad(dem_tu_xau);
                }


                // S·∫Øp x·∫øp d·ªØ li·ªáu t·ª´ ti√™u c·ª±c theo s·ªë l∆∞·ª£ng xu·∫•t hi·ªán (weight) gi·∫£m d·∫ßn v√† ch·ªçn top 10
                const top10NegativeWords = dem_tu_xau
                    .sort((a, b) => b.weight - a.weight) // S·∫Øp x·∫øp theo weight gi·∫£m d·∫ßn
                    .slice(0, 10);
                // L·∫•y c√°c t·ª´ v√† s·ªë l∆∞·ª£ng ƒë·ªÉ v·∫Ω bi·ªÉu ƒë·ªì
                const labels_xau = top10NegativeWords.map(item => item.word);
                const data_top_10_xau = top10NegativeWords.map(item => item.weight);
                show_top_10_xau(labels_xau, data_top_10_xau)


                const top10PositiveWords = dem_tu_tot
                    .sort((a, b) => b.weight - a.weight) // S·∫Øp x·∫øp theo weight gi·∫£m d·∫ßn
                    .slice(0, 10);
                // L·∫•y c√°c t·ª´ v√† s·ªë l∆∞·ª£ng ƒë·ªÉ v·∫Ω bi·ªÉu ƒë·ªì
                const labels_tot = top10PositiveWords.map(item => item.word);
                const data_top_10_tot = top10PositiveWords.map(item => item.weight);

                show_top_10_tot(labels_tot, data_top_10_tot)

                // Group nh·ªØng th·ªùi gian b√¨nh lu·∫≠n l·∫°i v·ªõi nhau
                const dataGroup = groupEmotionByDate(data_tong)
                showEmotionOverTimeChart(dataGroup)

                const dataGroupYear = groupEmotionByYear(data_tong)
                show_bieu_do_cam_xuc_theo_nam(dataGroupYear)



                // show_bieu_do_line_so_comment_by_time(data )
                const countDate = countCommentsByDate(data_tong)
                show_bieu_do_line_so_comment_by_time(countDate)

                // ph√¢n b·ªë  t·ªët x·∫•u m·ªói comment: 
                const tu_tot_moi_comment = data_tong.map(item => item.comment_data_llm.danh_sach_tu_tot.length);
                const tu_xau_moi_comment = data_tong.map(item => item.comment_data_llm.danh_sach_tu_xau.length);

                show_bieu_do_tot_xau_tren_comment(tu_tot_moi_comment, tu_xau_moi_comment)

                const data_cam_xuc = tinh_cam_xuc_theo_tu_khoa(data_tong);
                show_bieu_do_phan_bo_cam_xuc_theo_tu_khoa(data_cam_xuc);




                const {
                    topPositiveComments,
                    topNegativeComments
                } = get_top_comments(data_tong);

                console.log(topPositiveComments)
                show_top_5_tot_pho_bien(topPositiveComments)
                show_top_5_xau_pho_bien(topNegativeComments)
            } else {
                resultDiv.innerHTML = `<a href="{{ route('user.crawl') }}" class="text-primary link-underline-hover">Kh√¥ng c√≥ d·ªØ li·ªáu ƒë√°nh gi√°. Sang trang y√™u c·∫ßu ƒë√°nh gi√°</a>`;
                [
                    bieu_do_pie_post_group_page,
                    bieu_do_ty_le_cam_xuc_emoji,
                    sentimentChart,
                    bieu_do_horizontal_bar_chart_post_group_page,
                    bieu_do_horizontal_bar_chart_comment_group_page,
                    bieu_do_trung_binh_tot_xau_group_page,
                    bieu_do_horizontal_bar_chart_post_word_search,
                    bieu_do_cam_xuc_theo_tu_khoa,
                    wordChartCoutChart,
                    bieu_do_top_10_tot,
                    bieu_do_top_10_xau,
                    bieu_do_tot_xau_tren_comment,
                    bieu_do_top_5_xau_pho_bien,
                    bieu_do_so_luong_cam_xuc_emoji,
                    wordCloudChartGood,
                    wordCloudChartBad,
                    lineChart,
                    bieu_do_line_chart_comment_time,
                    bieu_do_cam_xuc_theo_nam,
                    bieu_do_bien_dong_emoji,
                ].forEach(chart => chart?.destroy?.());
                phan_tram_tot.innerText = ""
                phan_tram_xau.innerText = ""
                do_tin_cay.innerText = ""
                brand_card.innerText = ""
                word_search_card.innerText = ""
                cam_xuc_tich_cuc_emoji.innerText = ""
                cam_xuc_tieu_cuc_emoji.innerText = ""
                tong_so_reaction.innerText = ""
                tong_so_reaction.innerText = ""
                cam_xuc_tich_cuc_emoji.innerText = ""
                cam_xuc_tieu_cuc_emoji.innerText = ""
                tong_binh_luan.innerText = ""
                tu_tot_nhieu_nhat.innerText = ""
                tu_tot_nhieu_nhat.innerText = ""
                tu_xau_nhieu_nhat.innerText = ""
                tu_xau_nhieu_nhat.innerText = ""
                chartGrid.style.display = "none";

            }
        } catch (error) {
            console.error(error);
            resultDiv.innerHTML = `<div class="alert alert-danger">ƒê√£ x·∫£y ra l·ªói trong qu√° tr√¨nh g·ª≠i y√™u c·∫ßu.</div>`;
        }
    }


    // === L·∫ÆNG NGHE SUBMIT FORM ===
    document.addEventListener("DOMContentLoaded", () => {
        document.getElementById("evaluateForm").addEventListener("submit", async (e) => {
            e.preventDefault();
            Swal.showLoading();
            [
                bieu_do_pie_post_group_page,
                bieu_do_ty_le_cam_xuc_emoji,
                sentimentChart,
                bieu_do_horizontal_bar_chart_post_group_page,
                bieu_do_horizontal_bar_chart_comment_group_page,
                bieu_do_trung_binh_tot_xau_group_page,
                bieu_do_horizontal_bar_chart_post_word_search,
                bieu_do_cam_xuc_theo_tu_khoa,
                wordChartCoutChart,
                bieu_do_top_10_tot,
                bieu_do_top_10_xau,
                bieu_do_tot_xau_tren_comment,
                bieu_do_top_5_xau_pho_bien,
                bieu_do_so_luong_cam_xuc_emoji,
                wordCloudChartGood,
                wordCloudChartBad,
                lineChart,
                bieu_do_line_chart_comment_time,
                bieu_do_cam_xuc_theo_nam,
                bieu_do_bien_dong_emoji,
            ].forEach(chart => chart?.destroy?.());
            await evaluateBrand();
            Swal.close();
        });
    });
</script>